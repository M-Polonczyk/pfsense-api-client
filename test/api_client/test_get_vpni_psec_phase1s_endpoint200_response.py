# coding: utf-8

"""
    pfSense REST API Documentation

    ### Getting Started<br>- [Authentication and Authorization](https://pfrest.org/AUTHENTICATION_AND_AUTHORIZATION/)<br>- [Working with Object IDs](https://pfrest.org/WORKING_WITH_OBJECT_IDS/)<br>- [Queries, Filters, and Sorting](https://pfrest.org/QUERIES_FILTERS_AND_SORTING/)<br>- [Common Control Parameters](https://pfrest.org/COMMON_CONTROL_PARAMETERS/)<br>- [Working with HATEOAS](https://pfrest.org/WORKING_WITH_HATEOAS/)<br>

    The version of the OpenAPI document: v2.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfsense_api_client.models.get_vpni_psec_phase1s_endpoint200_response import GetVPNIPsecPhase1sEndpoint200Response

class TestGetVPNIPsecPhase1sEndpoint200Response(unittest.TestCase):
    """GetVPNIPsecPhase1sEndpoint200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetVPNIPsecPhase1sEndpoint200Response:
        """Test GetVPNIPsecPhase1sEndpoint200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetVPNIPsecPhase1sEndpoint200Response`
        """
        model = GetVPNIPsecPhase1sEndpoint200Response()
        if include_optional:
            return GetVPNIPsecPhase1sEndpoint200Response(
                code = 56,
                status = 'ok',
                response_id = '',
                message = '',
                data = [
                    openapi_client.models.i_psec_phase1.IPsecPhase1(
                        ikeid = 0, 
                        descr = '', 
                        disabled = True, 
                        iketype = 'ikev1', 
                        mode = 'main', 
                        protocol = 'inet', 
                        interface = '', 
                        remote_gateway = '', 
                        authentication_method = 'pre_shared_key', 
                        myid_type = 'myaddress', 
                        myid_data = '', 
                        peerid_type = 'any', 
                        peerid_data = '', 
                        pre_shared_key = '', 
                        certref = '', 
                        caref = '', 
                        rekey_time = 0, 
                        reauth_time = 0, 
                        rand_time = 0, 
                        lifetime = 0, 
                        startaction = '', 
                        closeaction = '', 
                        nat_traversal = 'on', 
                        gw_duplicates = True, 
                        mobike = True, 
                        splitconn = True, 
                        prfselect_enable = True, 
                        ikeport = '500', 
                        nattport = '4500', 
                        dpd_delay = 0, 
                        dpd_maxfail = 0, 
                        encryption = [
                            null
                            ], )
                    ],
                links = openapi_client.models._links._links()
            )
        else:
            return GetVPNIPsecPhase1sEndpoint200Response(
        )
        """

    def testGetVPNIPsecPhase1sEndpoint200Response(self):
        """Test GetVPNIPsecPhase1sEndpoint200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
