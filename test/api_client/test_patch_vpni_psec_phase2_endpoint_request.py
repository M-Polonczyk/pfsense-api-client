# coding: utf-8

"""
    pfSense REST API Documentation

    ### Getting Started<br>- [Authentication and Authorization](https://pfrest.org/AUTHENTICATION_AND_AUTHORIZATION/)<br>- [Working with Object IDs](https://pfrest.org/WORKING_WITH_OBJECT_IDS/)<br>- [Queries, Filters, and Sorting](https://pfrest.org/QUERIES_FILTERS_AND_SORTING/)<br>- [Common Control Parameters](https://pfrest.org/COMMON_CONTROL_PARAMETERS/)<br>- [Working with HATEOAS](https://pfrest.org/WORKING_WITH_HATEOAS/)<br>

    The version of the OpenAPI document: v2.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfsense_api_client.models.patch_vpni_psec_phase2_endpoint_request import PatchVPNIPsecPhase2EndpointRequest

class TestPatchVPNIPsecPhase2EndpointRequest(unittest.TestCase):
    """PatchVPNIPsecPhase2EndpointRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchVPNIPsecPhase2EndpointRequest:
        """Test PatchVPNIPsecPhase2EndpointRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchVPNIPsecPhase2EndpointRequest`
        """
        model = PatchVPNIPsecPhase2EndpointRequest()
        if include_optional:
            return PatchVPNIPsecPhase2EndpointRequest(
                uniqid = '67ed081abfaf0',
                reqid = 0,
                ikeid = 56,
                descr = '',
                disabled = True,
                mode = 'tunnel',
                localid_type = '',
                localid_address = '',
                localid_netbits = 0,
                natlocalid_type = '',
                natlocalid_address = '',
                natlocalid_netbits = 0,
                remoteid_type = '',
                remoteid_address = '',
                remoteid_netbits = 0,
                protocol = 'esp',
                encryption_algorithm_option = [
                    null
                    ],
                hash_algorithm_option = [
                    'hmac_sha1'
                    ],
                pfsgroup = 0,
                rekey_time = 0,
                rand_time = 0,
                lifetime = 0,
                pinghost = '',
                keepalive = True,
                id = 56
            )
        else:
            return PatchVPNIPsecPhase2EndpointRequest(
                id = 56,
        )
        """

    def testPatchVPNIPsecPhase2EndpointRequest(self):
        """Test PatchVPNIPsecPhase2EndpointRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
