# coding: utf-8

"""
    pfSense REST API Documentation

    ### Getting Started<br>- [Authentication and Authorization](https://pfrest.org/AUTHENTICATION_AND_AUTHORIZATION/)<br>- [Working with Object IDs](https://pfrest.org/WORKING_WITH_OBJECT_IDS/)<br>- [Queries, Filters, and Sorting](https://pfrest.org/QUERIES_FILTERS_AND_SORTING/)<br>- [Common Control Parameters](https://pfrest.org/COMMON_CONTROL_PARAMETERS/)<br>- [Working with HATEOAS](https://pfrest.org/WORKING_WITH_HATEOAS/)<br>

    The version of the OpenAPI document: v2.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfsense_api_client.models.get_firewall_nat_port_forwards_endpoint200_response import GetFirewallNATPortForwardsEndpoint200Response

class TestGetFirewallNATPortForwardsEndpoint200Response(unittest.TestCase):
    """GetFirewallNATPortForwardsEndpoint200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFirewallNATPortForwardsEndpoint200Response:
        """Test GetFirewallNATPortForwardsEndpoint200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFirewallNATPortForwardsEndpoint200Response`
        """
        model = GetFirewallNATPortForwardsEndpoint200Response()
        if include_optional:
            return GetFirewallNATPortForwardsEndpoint200Response(
                code = 56,
                status = 'ok',
                response_id = '',
                message = '',
                data = [
                    openapi_client.models.port_forward.PortForward(
                        interface = '', 
                        ipprotocol = 'inet', 
                        protocol = 'tcp', 
                        source = '', 
                        source_port = '', 
                        destination = '', 
                        destination_port = '', 
                        target = '', 
                        local_port = '', 
                        disabled = True, 
                        nordr = True, 
                        nosync = True, 
                        descr = '', 
                        natreflection = 'enable', 
                        associated_rule_id = '', 
                        created_time = 0, 
                        created_by = '@unknown IP (API)', 
                        updated_time = 0, 
                        updated_by = '@unknown IP (API)', )
                    ],
                links = openapi_client.models._links._links()
            )
        else:
            return GetFirewallNATPortForwardsEndpoint200Response(
        )
        """

    def testGetFirewallNATPortForwardsEndpoint200Response(self):
        """Test GetFirewallNATPortForwardsEndpoint200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
