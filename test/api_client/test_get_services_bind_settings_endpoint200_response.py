# coding: utf-8

"""
    pfSense REST API Documentation

    ### Getting Started<br>- [Authentication and Authorization](https://pfrest.org/AUTHENTICATION_AND_AUTHORIZATION/)<br>- [Working with Object IDs](https://pfrest.org/WORKING_WITH_OBJECT_IDS/)<br>- [Queries, Filters, and Sorting](https://pfrest.org/QUERIES_FILTERS_AND_SORTING/)<br>- [Common Control Parameters](https://pfrest.org/COMMON_CONTROL_PARAMETERS/)<br>- [Working with HATEOAS](https://pfrest.org/WORKING_WITH_HATEOAS/)<br>

    The version of the OpenAPI document: v2.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfsense_api_client.models.get_services_bind_settings_endpoint200_response import GetServicesBINDSettingsEndpoint200Response

class TestGetServicesBINDSettingsEndpoint200Response(unittest.TestCase):
    """GetServicesBINDSettingsEndpoint200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetServicesBINDSettingsEndpoint200Response:
        """Test GetServicesBINDSettingsEndpoint200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetServicesBINDSettingsEndpoint200Response`
        """
        model = GetServicesBINDSettingsEndpoint200Response()
        if include_optional:
            return GetServicesBINDSettingsEndpoint200Response(
                code = 56,
                status = 'ok',
                response_id = '',
                message = '',
                data = openapi_client.models.bind_settings.BINDSettings(
                    enable_bind = True, 
                    bind_ip_version = '', 
                    listenon = [
                        ''
                        ], 
                    bind_notify = True, 
                    bind_hide_version = True, 
                    bind_ram_limit = '256M', 
                    bind_logging = True, 
                    log_severity = 'critical', 
                    log_options = [
                        'default'
                        ], 
                    rate_enabled = True, 
                    rate_limit = 0, 
                    log_only = True, 
                    bind_forwarder = True, 
                    bind_forwarder_ips = [
                        ''
                        ], 
                    bind_dnssec_validation = 'auto', 
                    listenport = '53', 
                    controlport = '953', 
                    bind_custom_options = '', 
                    bind_global_settings = '', ),
                links = openapi_client.models._links._links()
            )
        else:
            return GetServicesBINDSettingsEndpoint200Response(
        )
        """

    def testGetServicesBINDSettingsEndpoint200Response(self):
        """Test GetServicesBINDSettingsEndpoint200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
