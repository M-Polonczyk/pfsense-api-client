# coding: utf-8

"""
    pfSense REST API Documentation

    ### Getting Started<br>- [Authentication and Authorization](https://pfrest.org/AUTHENTICATION_AND_AUTHORIZATION/)<br>- [Working with Object IDs](https://pfrest.org/WORKING_WITH_OBJECT_IDS/)<br>- [Queries, Filters, and Sorting](https://pfrest.org/QUERIES_FILTERS_AND_SORTING/)<br>- [Common Control Parameters](https://pfrest.org/COMMON_CONTROL_PARAMETERS/)<br>- [Working with HATEOAS](https://pfrest.org/WORKING_WITH_HATEOAS/)<br>

    The version of the OpenAPI document: v2.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pfsense_api_client.api.status_api import STATUSApi


class TestSTATUSApi(unittest.TestCase):
    """STATUSApi unit test stubs"""

    def setUp(self) -> None:
        self.api = STATUSApi()

    def tearDown(self) -> None:
        pass

    def test_delete_status_dhcp_server_leases_endpoint(self) -> None:
        """Test case for delete_status_dhcp_server_leases_endpoint

        """
        pass

    def test_delete_status_open_vpn_server_connection_endpoint(self) -> None:
        """Test case for delete_status_open_vpn_server_connection_endpoint

        """
        pass

    def test_get_status_carp_endpoint(self) -> None:
        """Test case for get_status_carp_endpoint

        """
        pass

    def test_get_status_dhcp_server_leases_endpoint(self) -> None:
        """Test case for get_status_dhcp_server_leases_endpoint

        """
        pass

    def test_get_status_gateways_endpoint(self) -> None:
        """Test case for get_status_gateways_endpoint

        """
        pass

    def test_get_status_i_psec_child_sa_endpoint(self) -> None:
        """Test case for get_status_i_psec_child_sa_endpoint

        """
        pass

    def test_get_status_i_psec_sas_endpoint(self) -> None:
        """Test case for get_status_i_psec_sas_endpoint

        """
        pass

    def test_get_status_interfaces_endpoint(self) -> None:
        """Test case for get_status_interfaces_endpoint

        """
        pass

    def test_get_status_logs_dhcp_endpoint(self) -> None:
        """Test case for get_status_logs_dhcp_endpoint

        """
        pass

    def test_get_status_logs_firewall_endpoint(self) -> None:
        """Test case for get_status_logs_firewall_endpoint

        """
        pass

    def test_get_status_logs_settings_endpoint(self) -> None:
        """Test case for get_status_logs_settings_endpoint

        """
        pass

    def test_get_status_logs_system_endpoint(self) -> None:
        """Test case for get_status_logs_system_endpoint

        """
        pass

    def test_get_status_open_vpn_clients_endpoint(self) -> None:
        """Test case for get_status_open_vpn_clients_endpoint

        """
        pass

    def test_get_status_open_vpn_server_connection_endpoint(self) -> None:
        """Test case for get_status_open_vpn_server_connection_endpoint

        """
        pass

    def test_get_status_open_vpn_server_route_endpoint(self) -> None:
        """Test case for get_status_open_vpn_server_route_endpoint

        """
        pass

    def test_get_status_open_vpn_servers_endpoint(self) -> None:
        """Test case for get_status_open_vpn_servers_endpoint

        """
        pass

    def test_get_status_services_endpoint(self) -> None:
        """Test case for get_status_services_endpoint

        """
        pass

    def test_get_status_system_endpoint(self) -> None:
        """Test case for get_status_system_endpoint

        """
        pass

    def test_patch_status_carp_endpoint(self) -> None:
        """Test case for patch_status_carp_endpoint

        """
        pass

    def test_patch_status_logs_settings_endpoint(self) -> None:
        """Test case for patch_status_logs_settings_endpoint

        """
        pass

    def test_post_status_service_endpoint(self) -> None:
        """Test case for post_status_service_endpoint

        """
        pass


if __name__ == '__main__':
    unittest.main()
